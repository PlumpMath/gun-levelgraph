{"version":3,"sources":["save-levelgraph.js"],"names":["createSaveToLvGraph","saveToLvGraph","$saveToLvGraph","addSaveToLvGraph","levelup","require","levelgraph","jsonld","defaultOpts","dbPath","defaultJsonldOpts","base","logger","opts","log","logging","args","buildOpts","Object","assign","jsonldOpts","levelDB","lvGraphDb","db","_opts","dbOptions","cb","Error","put","dbGet","get","$dbGet","queryId","queryOpts","chain"],"mappings":";;;;;QAuCgBA,mB,GAAAA,mB;QAiCAC,a,GAAAA,a;QAWAC,c,GAAAA,c;QAIAC,gB,GAAAA,gB;;AAnFhB;;AAJA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,SAASF,QAAQ,mBAAR,CAAf;;AAOA,IAAMG,cAAc;AAClBC,UAAQ;AADU,CAApB;;AAIA,IAAMC,oBAAoB;AACxBC,QAAM;AADkB,CAA1B;;AAIA,IAAMC,SAAS,SAATA,MAAS,GAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AAC5B,SAAO,SAASC,GAAT,GAAsB;AAC3B,QAAID,KAAKE,OAAT,EAAkB;AAAA;;AAAA,wCADGC,IACH;AADGA,YACH;AAAA;;AAChB,2BAAQF,GAAR,kBAAY,YAAZ,SAA6BE,IAA7B;AACD;AACF,GAJD;AAKD,CAND;;AAQA,SAASC,SAAT,CAAmBJ,IAAnB,EAAyB;AACvBA,SAAOK,OAAOC,MAAP,CAAcX,WAAd,EAA2BK,IAA3B,CAAP;;AAEA,MAAIO,aAAaF,OAAOC,MAAP,CAAcT,iBAAd,EAAiCG,KAAKO,UAAtC,CAAjB;;AAEAP,OAAKQ,OAAL,GAAeR,KAAKQ,OAAL,IAAgBjB,QAAQS,KAAKJ,MAAb,CAA/B;AACAI,OAAKS,SAAL,GAAiBT,KAAKS,SAAL,IAAkBhB,WAAWO,KAAKQ,OAAhB,CAAnC;AACAR,OAAKU,EAAL,GAAUV,KAAKU,EAAL,IAAWhB,OAAOM,KAAKS,SAAZ,EAAuBF,UAAvB,CAArB;AACAP,OAAKD,MAAL,GAAcC,KAAKD,MAAL,IAAeA,MAA7B;AACAC,OAAKC,GAAL,GAAWD,KAAKC,GAAL,IAAYD,KAAKD,MAAL,CAAYC,IAAZ,CAAvB;;AAEA,SAAOA,IAAP;AACD;;AAEM,SAASb,mBAAT,CAA6BwB,KAA7B,EAAoC;AACzC,MAAIC,YAAYR,UAAUO,KAAV,CAAhB;;AAEA,MAAMvB,gBAAgB,SAAhBA,aAAgB,CAAUM,MAAV,EAAkBmB,EAAlB,EAAsBb,IAAtB,EAA4B;AAChDA,WAAOK,OAAOC,MAAP,CAAcM,SAAd,EAAyBZ,IAAzB,CAAP;AACA,QAAMU,KAAKV,KAAKU,EAAhB;AACA,QAAI,CAACA,EAAL,EAAS;AACP,YAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;AACDd,SAAKC,GAAL,CAAS,KAAT,EAAgBS,GAAGhB,MAAnB,EAA2BA,MAA3B;AACAgB,OAAGhB,MAAH,CAAUqB,GAAV,CAAcrB,MAAd,EAAsBmB,EAAtB,EAA0Bb,IAA1B;AACD,GARD;;AAUA,MAAMX,iBAAiB,SAAjBA,cAAiB,CAAUK,MAAV,EAAkBM,IAAlB,EAAwB;AAC7CA,WAAOK,OAAOC,MAAP,CAAcM,SAAd,EAAyBZ,IAAzB,CAAP;AACA,WAAO,0BAAUZ,aAAV,EAAyBM,MAAzB,EAAiCM,IAAjC,CAAP;AACD,GAHD;;AAKA,MAAMgB,QAAQJ,UAAUF,EAAV,CAAahB,MAAb,CAAoBuB,GAAlC;;AAEA,MAAMC,SAAS,SAATA,MAAS,CAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AAC3C,WAAO,kCAAkBJ,KAAlB,EAAyBG,OAAzB,EAAkCC,SAAlC,CAAP;AACD,GAFD;;AAIA,SAAO;AACLJ,gBADK;AAELE,kBAFK;AAGLN,wBAHK;AAILxB,gCAJK;AAKLC;AALK,GAAP;AAOD;;AAEM,SAASD,aAAT,CAAuBM,MAAvB,EAA+BmB,EAA/B,EAAmCb,IAAnC,EAAyC;AAC9CA,SAAOK,OAAOC,MAAP,CAAcX,WAAd,EAA2BK,IAA3B,CAAP;AACAA,SAAOI,UAAUJ,IAAV,CAAP;;AAEA,MAAMU,KAAKV,KAAKU,EAAhB;AACA,MAAI,CAACA,EAAL,EAAS;AACP,UAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;AACDJ,KAAGhB,MAAH,CAAUqB,GAAV,CAAcrB,MAAd,EAAsBmB,EAAtB,EAA0Bb,IAA1B;AACD;;AAEM,SAASX,cAAT,CAAwBK,MAAxB,EAAgCmB,EAAhC,EAAoCb,IAApC,EAA0C;AAC/C,SAAO,0BAAUZ,aAAV,EAAyBM,MAAzB,EAAiCM,IAAjC,CAAP;AACD;;AAEM,SAASV,gBAAT,CAA0B+B,KAA1B,EAAiC;AACtCA,QAAMjC,aAAN,GAAsB,UAAUyB,EAAV,EAAcb,IAAd,EAAoB;AACxC,WAAOZ,cAAc,IAAd,EAAoByB,EAApB,EAAwBb,IAAxB,CAAP;AACD,GAFD;;AAIAqB,QAAMhC,cAAN,GAAuB,UAAUwB,EAAV,EAAcb,IAAd,EAAoB;AACzC,WAAOX,eAAe,IAAf,EAAqBwB,EAArB,EAAyBb,IAAzB,CAAP;AACD,GAFD;;AAIA,SAAOqB,KAAP;AACD;;kBAEc/B,gB","file":"save-levelgraph.js","sourcesContent":["const levelup = require('levelup')\nconst levelgraph = require('levelgraph')\nconst jsonld = require('levelgraph-jsonld')\n\nimport {\n  promisify,\n  promisifyWithOpts\n} from './promisify'\n\nconst defaultOpts = {\n  dbPath: './gundb',\n}\n\nconst defaultJsonldOpts = {\n  base: 'http://gun.io/base'\n}\n\nconst logger = (opts = {}) => {\n  return function log(...args) {\n    if (opts.logging) {\n      console.log('toLdGraph:', ...args)\n    }\n  }\n}\n\nfunction buildOpts(opts) {\n  opts = Object.assign(defaultOpts, opts)\n\n  let jsonldOpts = Object.assign(defaultJsonldOpts, opts.jsonldOpts)\n\n  opts.levelDB = opts.levelDB || levelup(opts.dbPath)\n  opts.lvGraphDb = opts.lvGraphDb || levelgraph(opts.levelDB)\n  opts.db = opts.db || jsonld(opts.lvGraphDb, jsonldOpts)\n  opts.logger = opts.logger || logger\n  opts.log = opts.log || opts.logger(opts)\n\n  return opts\n}\n\nexport function createSaveToLvGraph(_opts) {\n  let dbOptions = buildOpts(_opts)\n\n  const saveToLvGraph = function (jsonld, cb, opts) {\n    opts = Object.assign(dbOptions, opts)\n    const db = opts.db\n    if (!db) {\n      throw new Error('saveToLvGraph: missing db option')\n    }\n    opts.log('put', db.jsonld, jsonld)\n    db.jsonld.put(jsonld, cb, opts)\n  }\n\n  const $saveToLvGraph = function (jsonld, opts) {\n    opts = Object.assign(dbOptions, opts)\n    return promisify(saveToLvGraph, jsonld, opts)\n  }\n\n  const dbGet = dbOptions.db.jsonld.get\n\n  const $dbGet = function (queryId, queryOpts) {\n    return promisifyWithOpts(dbGet, queryId, queryOpts)\n  }\n\n  return {\n    dbGet,\n    $dbGet,\n    dbOptions,\n    saveToLvGraph,\n    $saveToLvGraph\n  }\n}\n\nexport function saveToLvGraph(jsonld, cb, opts) {\n  opts = Object.assign(defaultOpts, opts)\n  opts = buildOpts(opts)\n\n  const db = opts.db\n  if (!db) {\n    throw new Error('saveToLvGraph: missing db option')\n  }\n  db.jsonld.put(jsonld, cb, opts)\n}\n\nexport function $saveToLvGraph(jsonld, cb, opts) {\n  return promisify(saveToLvGraph, jsonld, opts)\n}\n\nexport function addSaveToLvGraph(chain) {\n  chain.saveToLvGraph = function (cb, opts) {\n    return saveToLvGraph(this, cb, opts)\n  }\n\n  chain.$saveToLvGraph = function (cb, opts) {\n    return $saveToLvGraph(this, cb, opts)\n  }\n\n  return chain\n}\n\nexport default addSaveToLvGraph"]}